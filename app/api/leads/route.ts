
import { NextResponse } from 'next/server';
import { cookies } from 'next/headers';
import { consultarLeads } from '@/lib/leads-service';

export async function GET(request: Request) {
  try {
    console.log('üì° API - Iniciando consulta de leads...');
    
    // Obter usu√°rio autenticado do cookie
    const cookieStore = await cookies();
    const userCookie = cookieStore.get('user');
    
    if (!userCookie) {
      console.error('‚ùå Cookie de usu√°rio n√£o encontrado');
      return NextResponse.json({ error: 'N√£o autenticado' }, { status: 401 });
    }

    let currentUser;
    try {
      currentUser = JSON.parse(userCookie.value);
      console.log('üë§ Dados do usu√°rio do cookie:', currentUser);
    } catch (e) {
      console.error('‚ùå Erro ao parsear cookie de usu√°rio:', e);
      return NextResponse.json({ error: 'Sess√£o inv√°lida' }, { status: 401 });
    }

    const isAdmin = currentUser.role === 'Administrador';
    const codUsuario = currentUser.id;

    console.log(`üë§ Usu√°rio autenticado: ${currentUser.name} (ID: ${codUsuario}, Admin: ${isAdmin})`);

    const leads = await consultarLeads(codUsuario, isAdmin);
    console.log(`‚úÖ API - ${leads.length} leads retornados`);
    console.log('üìä Leads encontrados:', leads.map(l => ({ 
      CODLEAD: l.CODLEAD, 
      NOME: l.NOME, 
      CODUSUARIO: l.CODUSUARIO,
      CODFUNIL: l.CODFUNIL,
      CODESTAGIO: l.CODESTAGIO 
    })));
    
    return NextResponse.json(leads);
  } catch (error: any) {
    console.error('‚ùå API - Erro ao consultar leads:', error.message);
    console.error('Stack trace:', error.stack);
    return NextResponse.json(
      { 
        error: error.message || 'Erro ao consultar leads',
        details: 'Verifique a conex√£o com a API Sankhya'
      },
      { status: 500 }
    );
  }
}

// Desabilitar cache para esta rota
export const dynamic = 'force-dynamic';
export const revalidate = 0;
